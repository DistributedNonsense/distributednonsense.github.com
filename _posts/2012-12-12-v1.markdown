---
layout: blog
title: CorrugatedIron.org v1.0.0 Released
heading: <strong>CorrugatedIron</strong> v1.0.0 Released
subheading: Riak 1.2 compat, Search, 2i, and more!
menuitem: Blog
description: A big release with big changes
author: JP
---

Over the last year, OJ and I have pushed up numerous bug fixes and minor feature enhancements while we puzzled out API issues, internal fixes, optimizations, and philosophical issues (to support .NET 3.5 or not). Over two years in the making, we're proud to release CorrugatedIron v1.0.0 to the world today.

## What's new?

We've added full support for Riak v1.2 features. What does that mean?

**Up-to-date PBC interface.** If Riak v1.2 can do it, we support it. And we send the correct message format, too.

**Better secondary index support.** We've updated secondary indexes to be first class citizens of CorrugatedIron and not just a manually configured MapReduce input phase.

**Riak Search support.** Our original support for Riak Search was a bit of a mess - users had to write their search queries as strings. We spent a lot of time focusing on getting our Riak Search interface right. Users can create searches using a fluent API. Because we know string mucking is neither fast nor fun we also added the option to compile your searches in CorrugatedIron. Compiling your searches will save a lot of CPU and memory during execution, so start compiling today!

**Fluent interface all the things!** Wherever we could make a fluent interface, we did. Even when it hurt. You're welcome.

**Even more documentation.** We've been on a documentation blitz both on the site and in the code base. We aren't done, but we're getting closer to having 100% API documentation up on the site and present in the code so you can read the docs while your IntelliSense goes crazy.

**Messy ClientID behavior.** There are a lot of crazy things that users can do with a client ID. Originally we punted on the decision and relied on developers to supply a client ID. The default behavior for Riak is to use vnode vector clocks, which removes the need to set a client ID. This removes a lot of pain from a developer's standpoint and we decided to support removing your pain. No more client IDs!

**Test Coverage.** CorrugatedIron v1.0.0 - now with more unit tests.

**TPL Support.** Better support for the Task Parallel Library has been added to the async client interfaces.

**Custom serializers, deserializers, and sibling resolution.** You can supply your own logic to muck with your data and resolve siblings. 

**Clean up.** There are too many minor fixes to mention, but you can rest assured that we've been going through the code base cleaning house and trying to make our code presentable and free of comments like `HAX GO HERE`.

**Upgraded dependencies.** Our protobuf.net and JSON dependencies have been moved to the current versions.

## What's gone?

We marked a number of methods in `RiakAsyncClient` as obsolete. In addition, while tidying up the interfaces, we updated the `Get` method to use the `RiakGetOptions` class. Make sure you check your code for these APIs - we'll be removing them from the code base in a few releases.

## Who's responsible?

While OJ Reeves and Jeremiah Peschka are responsible for the majority of the code, we couldn't have done it without the support of the community. In no particular order, thanks to the following people for their code, ideas, and conversation:

* [Tiago Margalho](https://github.com/tiagomargalho)
* [Kevin Pullin](https://github.com/kppullin)
* Matthew Whitfield
* [Ethan J. Brown](https://github.com/Iristyle)
* [Taliesin Sisson](https://github.com/taliesins)
* Felix Terkhorn
* Marc Gravell (protobuf-net)
* James Newton-King (Json.NET)
* And, of course, the fine people of Basho and #riak

## What's next?

**More documentation.** We're a long way from having great documentation coverage. We'll be working on getting that in place, but it's going to take time. 

**Github Issues.** There are some outstanding issues that we spotted during development that didn't make it before we stopped adding new code into v1.0.0. We'll be working to get the outstanding github issues closed. If you'd like to see something in CorrugatedIron, head on over to [the CorrugatedIron issue page](https://github.com/DistributedNonsense/CorrugatedIron/issues?state=open) and create a new issue.

Thanks!